/***********************************************************************************
*This program is a demo of drawing
*This demo was made for LCD modules with 8bit or 16bit data port.
*This program requires the the LCDKIWI library.

* File                : touch_pen.ino
* Hardware Environment: Arduino UNO&Mega2560
* Build Environment   : Arduino

*Set the pins to the correct ones for your development shield or breakout board.
*This demo use the BREAKOUT BOARD only and use these 8bit data lines to the LCD,
*pin usage as follow:
*                  LCD_CS  LCD_CD  LCD_WR  LCD_RD  LCD_RST  SD_SS  SD_DI  SD_DO  SD_SCK 
*     Arduino Uno    A3      A2      A1      A0      A4      10     11     12      13                            
*Arduino Mega2560    A3      A2      A1      A0      A4      10     11     12      13                           

*                  LCD_D0  LCD_D1  LCD_D2  LCD_D3  LCD_D4  LCD_D5  LCD_D6  LCD_D7  
*     Arduino Uno    8       9       2       3       4       5       6       7
*Arduino Mega2560    8       9       2       3       4       5       6       7 

*Remember to set the pins to suit your display module!
*
* @attention
*
* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
* TIME. AS A RESULT, QD electronic SHALL NOT BE HELD LIABLE FOR ANY
* DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
* FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE 
* CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
**********************************************************************************/

#include <TouchScreen.h> //touch library
#include <LCDWIKI_GUI.h> //Core graphics library
#include <LCDWIKI_KBV.h> //Hardware-specific library

//if the IC model is known or the modules is unreadable,you can use this constructed function
LCDWIKI_KBV tft(ILI9486,A3,A2,A1,A0,A4); //model,cs,cd,wr,rd,reset

#define YP A3  // must be an analog pin, use "An" notation!
#define XM A2  // must be an analog pin, use "An" notation!
#define YM 9   // can be a digital pin
#define XP 8   // can be a digital pin

//param calibration from kbv
#define TS_MINX 906
#define TS_MAXX 116

#define TS_MINY 92 
#define TS_MAXY 952

// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// For the one we're using, its 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);

#define BLACK   0x0000
#define BLUE    0x001F
#define RED     0xF800
#define GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF

uint16_t color_mask[] = {0xF800,0xFFE0,0x07E0,0x07FF,0x001F,0xF81F}; //color select

#define COLORBOXSIZE tft.Get_Display_Width()/6
#define PENBOXSIZE tft.Get_Display_Width()/4



const uint16_t emacs[] PROGMEM ={
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07,
0x36, 0x48, 0x42, 0x3a, 0x3a, 0x39, 0x2b, 0x2b, 0x2b, 0x61, 0x7d, 0x6d, 0xd1, 0xcb, 0x76, 0xd6,
0xd6, 0xc3, 0xd6, 0xcc, 0xcb, 0xcf, 0xcf, 0x6d, 0x6a, 0xd2, 0x61, 0x2b, 0x2b, 0x51, 0x39, 0x3a,
0x3a, 0x42, 0x48, 0x36, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0x07, 0x07, 0x48, 0x32, 0x1f, 0x3a, 0x2b, 0x2b, 0x2b, 0x7e, 0x6f, 0xcc, 0xd8, 0x9a, 0x9a, 0x9a,
0x9a, 0x9a, 0x9a, 0xd9, 0xce, 0xce, 0xd8, 0xd3, 0xd3, 0xd3, 0xc3, 0xc3, 0xc3, 0xd6, 0xd6, 0xcb,
0xd1, 0x6d, 0x7e, 0x2b, 0x2b, 0x2b, 0x3a, 0x3a, 0x32, 0x48, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0x07, 0x07, 0x42, 0x1f, 0x3a, 0x39, 0x2b, 0x62, 0xc1, 0xcb, 0xce, 0x9a, 0x9a, 0x9a,
0x9a, 0x9a, 0x9a, 0x9a, 0x9a, 0x9a, 0xce, 0xce, 0xce, 0xd8, 0xd8, 0xd3, 0xc3, 0xc3, 0xc3, 0xc3,
0xd6, 0xd6, 0xd6, 0xcc, 0xcc, 0xcc, 0xcc, 0xcf, 0x6f, 0x74, 0x62, 0x2b, 0x39, 0x3a, 0x1f, 0x42,
0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x48, 0x1f, 0x3a, 0x2b, 0x2b, 0xb8, 0x75, 0xce, 0x9a, 0x9a,
0x9a, 0x9a, 0x9a, 0x9a, 0xdb, 0xe8, 0xf2, 0xf3, 0xf5, 0xf6, 0xca, 0x9f, 0x99, 0x99, 0x99, 0xab,
0xae, 0xaa, 0xf6, 0xf5, 0xf3, 0xf2, 0xee, 0xdb, 0xcc, 0xcb, 0xcb, 0xcb, 0xcb, 0xcf, 0xd0, 0x6d,
0x66, 0x2b, 0x51, 0x3a, 0x1f, 0x48, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x48, 0x1f, 0x3a, 0x51, 0x2b, 0x6a, 0xc3, 0x9a,
0x9a, 0x9a, 0x9a, 0x9a, 0xdb, 0xe8, 0xf3, 0xf6, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xda, 0xaf, 0xae, 0x9b, 0xf6, 0xf4, 0xe8, 0xd8,
0xcf, 0xcf, 0xcf, 0xd0, 0xd0, 0xb9, 0x7d, 0x2b, 0x51, 0x3a, 0x1f, 0x48, 0x07, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x36, 0x32, 0x3a, 0x2b, 0x41, 0x6d,
0xd8, 0x9a, 0x9a, 0x9a, 0x9a, 0xdb, 0xed, 0xf8, 0xba, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3,
0xac, 0xac, 0xa0, 0xa2, 0xf5, 0xe8, 0xd8, 0xd0, 0xd0, 0xd1, 0xd1, 0xb9, 0x74, 0x3c, 0x2b, 0x3a,
0x32, 0x36, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x42, 0x1f, 0x39,
0x2b, 0x7f, 0x7a, 0x9a, 0x9a, 0x9a, 0x9a, 0xee, 0xf3, 0xae, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9d, 0x9d, 0x9d, 0xaf, 0xae,
0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xca, 0xa2, 0xb5, 0xf4, 0xe0, 0xd1, 0xd1, 0xd1,
0xd1, 0xbd, 0xb8, 0x2b, 0x39, 0x1f, 0x42, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36,
0x1f, 0x3a, 0x51, 0x69, 0xd6, 0x9a, 0x9a, 0x9a, 0x9a, 0xe8, 0xf8, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d,
0xaf, 0xae, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xa4,
0xaa, 0xf5, 0xe0, 0xd1, 0xb9, 0xb9, 0xb9, 0xbe, 0x65, 0x51, 0x3a, 0x1f, 0x36, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x07, 0x48, 0x1f, 0x2b, 0x2b, 0x6d, 0xce, 0x9a, 0x9a, 0x9a, 0xee, 0xf6, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0xba, 0x9f,
0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2,
0xa4, 0xa4, 0xd5, 0xaa, 0xb0, 0xb0, 0xb6, 0xf5, 0xe0, 0xb9, 0xb9, 0xb9, 0xbd, 0x7d, 0x2b, 0x2b,
0x1f, 0x48, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x07, 0x42, 0x3a, 0x51, 0x67, 0xd6, 0x9a, 0x9a, 0x9a, 0xe0, 0xf5, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab,
0xab, 0x9f, 0x9f, 0x9d, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8,
0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xb5, 0xa5, 0xf4, 0xdb, 0xbd,
0xbd, 0xbd, 0xbe, 0x67, 0x51, 0x3a, 0x42, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x32, 0x3a, 0x51, 0x74, 0xce, 0x9a, 0x9a, 0x9a,
0xf2, 0xae, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0x9b, 0xb3, 0xac, 0xa0,
0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5,
0xa7, 0xa7, 0xbb, 0xe8, 0xbd, 0xbd, 0xbd, 0x6d, 0x66, 0x51, 0x3a, 0x32, 0x36, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x32, 0x39, 0x2b, 0x6d, 0x9a,
0x9a, 0x9a, 0xe0, 0xf8, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3,
0xac, 0xa0, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5, 0xaa, 0xb0, 0xb0, 0xb6, 0xb2,
0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xf3, 0xdb, 0xbd, 0x6d, 0xbe, 0xd2, 0x2b, 0x39,
0x32, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x32, 0x2b,
0x51, 0xd0, 0x9a, 0x9a, 0x9a, 0xe8, 0xac, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xda, 0xaf, 0xae,
0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0,
0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xfd, 0xe0, 0xbe,
0xbe, 0xbe, 0x74, 0x51, 0x2b, 0x32, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0x36, 0x1f, 0x2b, 0x62, 0x76, 0x9a, 0x9a, 0x9a, 0xfa, 0xab, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d,
0xaf, 0xae, 0x9b, 0x9b, 0x9b, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5,
0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa3, 0xa1, 0xa1, 0xa9,
0xa9, 0x9e, 0xad, 0xe8, 0xbe, 0xbe, 0xbe, 0x7f, 0x62, 0x2b, 0x1f, 0x36, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x36, 0x1f, 0x39, 0x61, 0x78, 0x9a, 0x9a, 0x9a, 0xf5, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f,
0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2,
0xa4, 0xe6, 0xde, 0xe7, 0xe5, 0xdd, 0xe5, 0xdf, 0xea, 0xf7, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1,
0xa1, 0xc4, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb, 0xf2, 0x6d, 0xbe, 0xbe, 0xc7, 0x62, 0x39, 0x1f,
0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x32, 0x2b, 0x3e, 0x78, 0x9a, 0x9a, 0xdb, 0xf8, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab,
0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xda, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8,
0xca, 0xe6, 0xeb, 0xe5, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xe7, 0xf0,
0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0xf4, 0xb9, 0xbe,
0xc1, 0xc8, 0x3e, 0x2b, 0x32, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x42, 0x39, 0x2b, 0xcb, 0x9a, 0x9a,
0xdb, 0xf8, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0xab, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xac, 0xa0,
0xa0, 0xe6, 0xeb, 0xe5, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xe4, 0xe1, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xa6, 0xa6, 0xa6,
0x2f, 0x2f, 0xf4, 0x6d, 0xc1, 0xc1, 0x74, 0x2b, 0x39, 0x42, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x42, 0x3a, 0x51,
0xd1, 0x9a, 0x9a, 0xdb, 0xf8, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9d, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3,
0xac, 0xf0, 0xde, 0xe7, 0xe2, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xea, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb,
0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x16, 0xf4, 0x6d, 0xc1, 0xd4, 0xbc, 0x51, 0x3a, 0x42, 0x07,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0x48, 0x3a, 0x51, 0x6a, 0x9a, 0x9a, 0x9a, 0xf5, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b,
0x9b, 0x9b, 0x99, 0xea, 0xe7, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xe2, 0xe4,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xec, 0x9e,
0xad, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0xf2, 0xd4, 0xd4, 0xd4,
0xc2, 0x51, 0x3a, 0x48, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x36, 0x1f, 0x2b, 0x7e, 0xd9, 0x9a, 0x9a, 0xf3, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d,
0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5,
0xaa, 0xb0, 0xb0, 0xb6, 0xb2, 0xec, 0xe1, 0xdf, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0xe5, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33,
0x13, 0xed, 0xd4, 0xc7, 0xc7, 0x65, 0x2b, 0x1f, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x39, 0x63, 0x7a, 0x9a, 0x9a, 0xf2, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f,
0x9d, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xca, 0xa2, 0xa2,
0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xb5, 0xa5, 0xa5, 0xa7, 0xe1, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xf7, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12,
0x12, 0x33, 0x33, 0x13, 0x13, 0x26, 0xee, 0xc7, 0xc7, 0xc8, 0x61, 0x39, 0x32, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x48, 0x3a, 0x2b, 0x75, 0x9a, 0x9a,
0xee, 0x9f, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab,
0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8,
0xa2, 0xa2, 0xa4, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xd7,
0xe1, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe1, 0xa6, 0x2f, 0x2f, 0x16,
0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x13, 0x26, 0x52, 0x0e, 0xdb, 0xc7, 0xc7, 0xd2, 0x2b,
0x3a, 0x48, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x1f, 0x51,
0x7f, 0x9a, 0x9a, 0xdb, 0xca, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0,
0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5, 0xaa, 0xb0, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5,
0xa7, 0xa7, 0xe6, 0xdf, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xde,
0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0x2d, 0x4d, 0x88,
0xbe, 0xc7, 0xc8, 0xc5, 0x51, 0x1f, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x42, 0x2b, 0x63, 0xd3, 0x9a, 0x9a, 0xf3, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xda, 0xaf, 0xae, 0x9b, 0x9b, 0xb3,
0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xf0,
0xe6, 0xea, 0xeb, 0xe7, 0xdd, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xde, 0x16, 0x16, 0x12, 0x12, 0x12, 0x33, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d,
0x2d, 0x10, 0x10, 0x10, 0xed, 0xc8, 0xc8, 0xbf, 0x61, 0x2b, 0x42, 0x07, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x48, 0x3a, 0x51, 0xd1, 0x9a, 0x9a, 0xe8, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b,
0x9b, 0xb3, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xac, 0xec, 0xe6, 0xe1, 0xde, 0xeb, 0xdf, 0xe5,
0xdd, 0xdc, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe1, 0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x13,
0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0xdb, 0xc8, 0xc8, 0xb8, 0x51, 0x3a, 0x48,
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x2b, 0x66, 0x9a, 0x9a, 0xdb, 0xca, 0x99,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9f, 0x9d, 0x9d,
0xaf, 0xae, 0x9b, 0x99, 0xe1, 0xeb, 0xe7, 0xe5, 0xdc, 0xe2, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe2, 0x2f, 0x12, 0x12, 0x43, 0x33,
0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x88, 0xd4, 0xc8,
0xbf, 0x67, 0x2b, 0x32, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x48, 0x3a, 0x2b, 0x76, 0x9a,
0x9a, 0xfa, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f,
0x9d, 0x9d, 0xaf, 0xaf, 0xae, 0xe1, 0xdd, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xe1, 0x12,
0x43, 0x33, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x10, 0x10, 0x5a, 0x0e, 0x0e, 0x0a, 0x0a,
0x30, 0x28, 0xee, 0xbf, 0xbf, 0xb8, 0x2b, 0x3a, 0x48, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32,
0x2b, 0xb8, 0x9a, 0x9a, 0xdb, 0xae, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab,
0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x99, 0xe5, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0xe4, 0xe1, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e,
0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x0c, 0xbe, 0xbf, 0xbf, 0x65, 0x39, 0x32, 0x07, 0x00, 0x00,
0x00, 0x07, 0x48, 0x3a, 0x2b, 0x76, 0x9a, 0x9a, 0xf3, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
0x99, 0xab, 0xab, 0x9f, 0x9f, 0x9d, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0xe7, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0xe2, 0xdf, 0xf7, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0x10,
0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x06, 0x0b, 0xe8, 0xbf, 0xd2, 0xb8, 0x2b,
0x3a, 0x48, 0x07, 0x00, 0x00, 0x07, 0x42, 0x2b, 0x66, 0x9a, 0x9a, 0xdb, 0x9f, 0x99, 0x99, 0x99,
0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xec, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xdc, 0xdd, 0xe5, 0xe7, 0xdf, 0xeb,
0xde, 0xde, 0xde, 0xea, 0xe1, 0xf0, 0x12, 0x12, 0x43, 0x33, 0x33, 0x13, 0x13, 0x26, 0x52, 0x2d,
0x2d, 0x10, 0x10, 0x5a, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x0c,
0xbe, 0xd2, 0xd2, 0x67, 0x2b, 0x42, 0x07, 0x00, 0x07, 0x36, 0x3a, 0x51, 0xcf, 0x9a, 0x9a, 0xf3,
0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b,
0x9b, 0xb3, 0xe1, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe2, 0xe5, 0xdf, 0xde, 0xe6, 0xfc, 0xa9, 0x9e, 0x9e,
0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26,
0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x28, 0x06, 0x06, 0x0b,
0x0b, 0x09, 0x09, 0x0d, 0xe8, 0xd2, 0xd2, 0x7e, 0x51, 0x3a, 0x36, 0x07, 0x07, 0x48, 0x3a, 0x61,
0xce, 0x9a, 0xdb, 0xae, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0x9d,
0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xec, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe2, 0xe7, 0xea, 0xec, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9,
0x9e, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x12, 0x33, 0x33,
0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x10, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06,
0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x88, 0xc7, 0xd2, 0xbc, 0x61, 0x3a, 0x48, 0x07,
0x07, 0x1f, 0x51, 0x6d, 0x9a, 0x9a, 0xf2, 0x99, 0x99, 0x99, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f,
0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0x9b, 0xac, 0xac, 0xa0, 0xa0, 0xe5, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xde, 0xb5, 0xd7, 0xa3, 0xa3, 0xa1,
0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xa6, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12,
0x43, 0x33, 0x13, 0x13, 0x13, 0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x5a, 0x0e, 0x0a, 0x0a, 0x0a,
0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0xe0, 0xbc, 0xbc,
0xb4, 0x51, 0x1f, 0x07, 0x36, 0x3a, 0x2b, 0xd6, 0x9a, 0x9a, 0xf6, 0x99, 0x99, 0x99, 0xab, 0xab,
0x9f, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa0, 0xa8, 0xec,
0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xec, 0xa7, 0xa3,
0xa3, 0xa1, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x2f, 0x16,
0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e,
0x0a, 0x0a, 0x30, 0x28, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x0c,
0x04, 0xed, 0xbc, 0xbc, 0xb7, 0x2b, 0x3a, 0x36, 0x42, 0x39, 0x67, 0x9a, 0x9a, 0xe0, 0x99, 0x99,
0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xda, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0,
0xa8, 0xa8, 0xa2, 0xa2, 0xe1, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0xe7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f,
0x2f, 0x16, 0x16, 0x12, 0x12, 0x12, 0x33, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x10, 0x10,
0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x47,
0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0xb9, 0xbc, 0xbc, 0x63, 0x39, 0x42, 0x32, 0x51, 0x6d, 0x9a,
0x9a, 0xfa, 0x99, 0x99, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac,
0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xde, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0xdc, 0xa3, 0xa3, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xa6,
0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x13, 0x26, 0x52, 0x2d,
0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09,
0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0xee, 0xbc, 0xb8, 0xc5, 0x51, 0x32,
0x3a, 0x2b, 0x76, 0x9a, 0xd9, 0xf6, 0xab, 0xab, 0x9f, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf, 0xae, 0x9b,
0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xde, 0xe3,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdf, 0xa1, 0xc4, 0xa9, 0xa9, 0x9e, 0x9e,
0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26,
0x26, 0x2d, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x06, 0x0b,
0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0xed, 0xb8,
0xb8, 0xc2, 0x2b, 0x3a, 0x3a, 0x2b, 0xce, 0xd9, 0xdb, 0xab, 0xba, 0x9f, 0x9f, 0x9d, 0x9d, 0xaf,
0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa,
0xaa, 0xb0, 0xb6, 0xe1, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdd, 0xec,
0x9e, 0x9e, 0xad, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x33,
0x13, 0x13, 0x26, 0x52, 0x2d, 0x2d, 0x10, 0x10, 0x5a, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06,
0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x05, 0x05,
0x05, 0x02, 0x01, 0xc7, 0xb8, 0xb7, 0x41, 0x3a, 0x39, 0x7e, 0xd9, 0xce, 0xe8, 0xba, 0x9f, 0x9f,
0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4,
0xa4, 0xd5, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xe6, 0xdc, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xe3, 0xeb, 0xfc, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12,
0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x0a,
0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c,
0x37, 0x05, 0x05, 0x02, 0x02, 0x5e, 0x01, 0xdb, 0xb8, 0xb8, 0x67, 0x39, 0x51, 0x6d, 0xce, 0xce,
0xf3, 0x9f, 0x9d, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xca,
0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb2, 0xb5, 0xa5, 0xa5, 0xf9, 0xdf, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xeb, 0xf7, 0x2f, 0x2f, 0x16, 0x16,
0x16, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e,
0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x06, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04,
0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0xee, 0xb8, 0xb7, 0x70, 0x51,
0x2b, 0xcf, 0xce, 0xd8, 0xf8, 0x9d, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0,
0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7,
0xa7, 0xd7, 0xa3, 0xe6, 0xdc, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4,
0xdf, 0xf0, 0x16, 0x12, 0x12, 0x43, 0x33, 0x33, 0x13, 0x13, 0x26, 0x52, 0x2d, 0x2d, 0x10, 0x10,
0x5a, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47,
0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0xed,
0xb7, 0xb7, 0xc0, 0x2b, 0x2b, 0xd6, 0xd8, 0xd3, 0x9b, 0x9d, 0xaf, 0xae, 0x9b, 0x9b, 0xb3, 0xac,
0xa0, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5, 0xaa, 0xb0, 0xb0, 0xb6, 0xb2, 0xb5,
0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xa1, 0xde, 0xe2, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xe7, 0xec, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0x2d,
0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09,
0x0d, 0x0d, 0x4b, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x01,
0x03, 0x03, 0x3f, 0x54, 0xb7, 0xb7, 0xc2, 0x2b, 0x51, 0xc3, 0xd3, 0xe0, 0x9d, 0xaf, 0xae, 0x9b,
0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6,
0xb2, 0xb5, 0xa5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0xfb, 0xeb,
0xe2, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe5, 0xe6, 0x13, 0x26,
0x26, 0x2d, 0x2d, 0x10, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b,
0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02,
0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x1e, 0x25, 0xbe, 0xb7, 0xcd, 0x2b, 0x67, 0xd3, 0xd3, 0xe8,
0xae, 0x9b, 0x9b, 0x9b, 0xac, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xa4, 0xaa,
0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa3, 0xa1, 0xa1, 0xa9, 0xa9,
0x9e, 0x9e, 0xad, 0xad, 0xfb, 0xde, 0xe2, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0xdd, 0xe6, 0x2d, 0x4d, 0x10, 0x10, 0x5a, 0x0e, 0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06,
0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05,
0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0xdb, 0xb7, 0xb7, 0x63,
0xd2, 0xd3, 0xc3, 0xed, 0x9b, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa0, 0xa8, 0xca, 0xa2, 0xa2, 0xa4,
0xa4, 0xaa, 0xaa, 0xb0, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1,
0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0xad, 0xea, 0xdc, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdd, 0xe1, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30,
0x28, 0x06, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x0c, 0x04, 0x04, 0x1c,
0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x25, 0x14, 0x14,
0xe0, 0xcd, 0xcd, 0x65, 0x74, 0xc3, 0xc3, 0xfa, 0x9b, 0xb3, 0xac, 0xa0, 0xa0, 0xa8, 0xa8, 0xa2,
0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3,
0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16,
0x12, 0xe6, 0xe7, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdc, 0xea,
0x2d, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04,
0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x1e, 0x25,
0x14, 0x14, 0x11, 0x11, 0xee, 0xcd, 0xcd, 0x65, 0x6d, 0xc3, 0xc3, 0xf3, 0xac, 0xac, 0xa0, 0xa0,
0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7,
0xa7, 0xa3, 0xa3, 0xa3, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xa6, 0xa6, 0xa6, 0x2f,
0x2f, 0x16, 0x16, 0x12, 0x12, 0x8a, 0xfc, 0xf7, 0xea, 0xe7, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0xe2, 0xde, 0x13, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47,
0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f,
0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0xee, 0xcd, 0xc2, 0x6b, 0x6d, 0xd6, 0xd6, 0xf3,
0xa0, 0xa0, 0xa8, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb0, 0xb2, 0xb2, 0xb5,
0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb, 0xa6,
0xa6, 0xf0, 0xe1, 0xeb, 0xe7, 0xdd, 0xdc, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe2, 0xde, 0x84, 0x55, 0x09, 0x09,
0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03,
0x03, 0x03, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15, 0xee, 0xc2, 0xc2, 0x6b,
0x6d, 0xd6, 0xd6, 0xf5, 0xa0, 0xa8, 0xa8, 0xa2, 0xa2, 0xa4, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6,
0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xd7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0x9e, 0xad,
0xad, 0xf7, 0xde, 0xe7, 0xe2, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0xe4, 0xea, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x05, 0x05, 0x05, 0x02, 0x02,
0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15,
0xed, 0xc2, 0xc2, 0x70, 0x6d, 0xd6, 0xcc, 0xf5, 0xa8, 0xca, 0xa2, 0xa2, 0xa4, 0xa4, 0xd5, 0xaa,
0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xa1, 0xa9, 0xa9,
0x9e, 0x9e, 0xf9, 0xde, 0xdd, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0xdc, 0xe7, 0xea, 0x71, 0x0d, 0x0d, 0x4b, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05,
0x02, 0x02, 0x5e, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a,
0x49, 0x15, 0x15, 0x17, 0x77, 0xc2, 0xc2, 0x70, 0x6d, 0xcc, 0xcc, 0xf5, 0xca, 0xa2, 0xa2, 0xa4,
0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1,
0xc4, 0xa9, 0xa9, 0x9e, 0xec, 0xe7, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0xdc, 0xe7, 0xea, 0xfc, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c,
0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x11,
0x11, 0x2a, 0x2a, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x77, 0xc2, 0xc2, 0x6b, 0x6d, 0xcc, 0xcc, 0xf5,
0xa2, 0xa4, 0xa4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xd7, 0xa3,
0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0xec, 0xe5, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0xe2, 0xe7, 0xea, 0xfc, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04,
0x04, 0x1c, 0x37, 0x05, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25,
0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x1a, 0x6c, 0xc2, 0xc0, 0x6b,
0xbe, 0xcc, 0xcb, 0xf3, 0xa4, 0xa4, 0xd5, 0xaa, 0xb0, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7,
0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xa1, 0xa9, 0xa9, 0xf9, 0xdf, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0xe3, 0xe5, 0xde, 0xec, 0x28, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b,
0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x3f,
0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x5d, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b,
0xee, 0xc0, 0xc0, 0x6e, 0x6a, 0xcb, 0xcb, 0xf4, 0xa4, 0xaa, 0xaa, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5,
0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0xe1, 0xe2, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0xe4, 0xe7, 0xe1, 0x8b, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09,
0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03,
0x03, 0x3f, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x60, 0x17, 0x1a,
0x1a, 0x1b, 0x1b, 0x20, 0xee, 0xc0, 0xc0, 0x69, 0x7d, 0xcb, 0xcb, 0xf2, 0xaa, 0xaa, 0xb0, 0xb6,
0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa3, 0xa1, 0xa1, 0xa9, 0xa9, 0xa9, 0xdf, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xe3, 0xe5, 0xe1, 0x2d, 0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b,
0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02,
0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15,
0x17, 0x17, 0x1a, 0x1a, 0x1b, 0x20, 0x20, 0x19, 0xee, 0xc0, 0xc0, 0x65, 0xb8, 0xcb, 0xcf, 0xe8,
0xb0, 0xb0, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0xa9,
0xfb, 0xe5, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xe7, 0x71, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06,
0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05,
0x02, 0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x2a, 0x2a,
0x5d, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0xe0, 0xc0, 0xb4, 0x67,
0x67, 0xcf, 0xcf, 0xee, 0xb6, 0xb2, 0xb5, 0xa5, 0xa5, 0xa5, 0xa7, 0xd7, 0xa3, 0xa3, 0xa1, 0xa1,
0xc4, 0xa9, 0x9e, 0x9e, 0xe7, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe5, 0xec, 0x5a, 0x0e, 0x0e, 0x0a, 0x0a, 0x30,
0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c,
0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x1e, 0x25, 0x14, 0x14, 0x11,
0x11, 0x2a, 0x49, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34,
0xd9, 0xb4, 0xb4, 0x61, 0x2b, 0xd0, 0xcf, 0xdb, 0xb2, 0xb5, 0xa5, 0xa5, 0xa7, 0xa7, 0xa3, 0xa3,
0xa3, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xde, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xea, 0x10, 0x0e, 0x0e, 0x0a,
0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04,
0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25,
0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x5f, 0x1b, 0x20, 0x20, 0x19,
0x19, 0x53, 0x34, 0x24, 0xc1, 0xb4, 0xb4, 0x2b, 0x2b, 0x6f, 0xd0, 0xd0, 0xa3, 0xa5, 0xa5, 0xa7,
0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0xa9, 0x9e, 0x9e, 0xf9, 0xe4, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdc, 0xec, 0x10,
0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x06, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b,
0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x03, 0x1e,
0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b,
0x20, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x53, 0xb4, 0xb4, 0xb1, 0x2b, 0x2b, 0x6d, 0xd0, 0xd0,
0xf5, 0xa7, 0xa7, 0xd7, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xde, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0xdc, 0x83, 0x5a, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09,
0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x05, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03,
0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a,
0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x5b, 0x72, 0xb4, 0xb4, 0x9c, 0x2b,
0x51, 0x7f, 0xd0, 0xd1, 0xf2, 0xa7, 0xa3, 0xa3, 0xa1, 0xa1, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad,
0xbb, 0xa6, 0xe7, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xe4, 0xf0, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b,
0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01,
0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15,
0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0xee,
0xb4, 0xb4, 0x69, 0x51, 0x39, 0x64, 0xd1, 0xd1, 0xee, 0xa3, 0xa3, 0xa1, 0xa1, 0xc4, 0xa9, 0x9e,
0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0xdd, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xde, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06,
0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05,
0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a,
0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x24,
0x1d, 0x1d, 0x23, 0xdb, 0xb4, 0xc5, 0x67, 0x39, 0x3a, 0x51, 0x6f, 0xd1, 0xd8, 0xa1, 0xa1, 0xa1,
0xc4, 0xa9, 0x9e, 0x9e, 0xad, 0xad, 0xa6, 0xa6, 0xa6, 0x2f, 0xe5, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x89, 0x0e, 0x0a, 0x0a, 0x30,
0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37,
0x05, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11,
0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34,
0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x59, 0xbc, 0xc5, 0xc9, 0x41, 0x3a, 0x3a, 0x2b, 0x6d, 0xd1,
0xb9, 0xf3, 0xa1, 0xa9, 0xa9, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x2f, 0xde, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0x0a,
0x0a, 0x30, 0x28, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x0c, 0x04,
0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x25, 0x25,
0x14, 0x14, 0x11, 0x11, 0x2a, 0x5d, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19,
0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x72, 0xc5, 0xc5, 0x9c, 0x2b, 0x3a,
0x32, 0x51, 0x74, 0xb9, 0xb9, 0xed, 0xa9, 0x9e, 0x9e, 0x9e, 0xad, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f,
0x16, 0x16, 0xfc, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xec, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x47, 0x0c,
0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e,
0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b,
0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x22, 0xf1, 0xc5,
0xc5, 0x65, 0x51, 0x32, 0x42, 0x39, 0x67, 0xb9, 0xb9, 0xdb, 0x9e, 0x9e, 0xad, 0xad, 0xa6, 0xa6,
0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0xde, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdc, 0xec, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d,
0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02, 0x01, 0x01, 0x03,
0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a,
0x1a, 0x1b, 0x1b, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22,
0x46, 0x3b, 0xc7, 0xc5, 0xc9, 0x61, 0x39, 0x42, 0x36, 0x3a, 0x2b, 0x6d, 0xb9, 0xb9, 0xf3, 0xad,
0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0xe7, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xdf, 0x83, 0x0b,
0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01,
0x01, 0x01, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x25, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15, 0x15, 0x60,
0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23,
0x23, 0x22, 0x22, 0x3b, 0x57, 0x72, 0xc5, 0xc9, 0x6b, 0x2b, 0x3a, 0x36, 0x07, 0x1f, 0x51, 0x7d,
0xb9, 0xbd, 0xe8, 0xbb, 0xa6, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43, 0x33, 0x33, 0x13,
0x43, 0xe7, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0xe3, 0xe5, 0xe1, 0x8b, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05,
0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49,
0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x5b,
0x1d, 0x1d, 0x23, 0x59, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0xf1, 0xc9, 0xc9, 0x65, 0x51, 0x1f, 0x07,
0x07, 0x48, 0x3a, 0x61, 0xbd, 0xb9, 0xd0, 0xfd, 0xa6, 0x2f, 0x2f, 0x16, 0x16, 0x12, 0x12, 0x43,
0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0xde, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xdd, 0xdf, 0xea, 0xe6, 0x84, 0x37,
0x05, 0x05, 0x02, 0x02, 0x5e, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11,
0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x53, 0x34,
0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x46, 0xc2, 0xc9, 0xb1,
0x61, 0x3a, 0x48, 0x07, 0x07, 0x36, 0x3a, 0x51, 0x7f, 0xbd, 0xbd, 0xed, 0x2f, 0x16, 0x16, 0x16,
0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0xec, 0xdd, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0xe3, 0xdc, 0xdd, 0xe7, 0xe7, 0xdf, 0xeb, 0xde, 0xde, 0xde, 0xde, 0xde, 0xde,
0xea, 0xea, 0xea, 0xea, 0x68, 0xe6, 0xe9, 0xe9, 0x7c, 0x90, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19,
0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x2c, 0x2c,
0xf1, 0xc9, 0xc9, 0x69, 0x51, 0x3a, 0x36, 0x07, 0x00, 0x07, 0x42, 0x2b, 0x65, 0xbd, 0xbd, 0xcc,
0x33, 0x16, 0x12, 0x12, 0x43, 0x33, 0x33, 0x13, 0x13, 0x26, 0x52, 0x2d, 0x2d, 0x10, 0x10, 0x5a,
0x0e, 0xe1, 0xdc, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xdc,
0xe7, 0xde, 0x7c, 0x19, 0x34, 0x34, 0x24, 0x5b, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e,
0x2e, 0x2c, 0x2c, 0x5c, 0xbf, 0xb1, 0xb1, 0x63, 0x2b, 0x42, 0x07, 0x00, 0x00, 0x07, 0x48, 0x3a,
0x2b, 0xc1, 0x6d, 0xbe, 0xed, 0x12, 0x12, 0x43, 0x33, 0x13, 0x13, 0x26, 0x26, 0x52, 0x2d, 0x4d,
0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0xe1, 0xe5, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdd, 0xe1, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22,
0x3b, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x6c, 0xb1, 0xb1, 0x6e, 0x2b, 0x3a, 0x48, 0x07, 0x00,
0x00, 0x00, 0x07, 0x32, 0x2b, 0x70, 0xbe, 0xbe, 0xcc, 0x4d, 0x33, 0x33, 0x13, 0x13, 0x26, 0x26,
0x2d, 0x2d, 0x10, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0xfc, 0xef, 0xdd,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xea, 0x1d, 0x23,
0x59, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x2c, 0x2c, 0x2c, 0x27, 0x5c, 0xbc, 0xb1, 0xb1, 0x67, 0x2b,
0x32, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x48, 0x3a, 0x2b, 0xc7, 0xbe, 0xbe, 0xe8, 0x13, 0x13,
0x13, 0x26, 0x52, 0x2d, 0x4d, 0x10, 0x10, 0x5a, 0x0e, 0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06,
0x0b, 0x0b, 0x09, 0x09, 0xf7, 0xef, 0xdd, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0xe7, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0xf1, 0xb1,
0xb1, 0x69, 0x2b, 0x3a, 0x48, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x2b, 0x65, 0xbe,
0xbe, 0xb9, 0xfe, 0x26, 0x26, 0x2d, 0x2d, 0x4d, 0x10, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28,
0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x83, 0xea, 0xe7, 0xe2, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0xe3, 0x68, 0x22, 0x22, 0x3b, 0x3b, 0x2e, 0x5c, 0x2c, 0x2c, 0x27, 0x31,
0x31, 0x72, 0xc0, 0xb1, 0x9c, 0x63, 0x2b, 0x32, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0x48, 0x3a, 0x51, 0xbf, 0xbe, 0xbe, 0xe0, 0x26, 0x2d, 0x2d, 0x10, 0x10, 0x10, 0x0e, 0x0e, 0x0a,
0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04,
0x1c, 0x1c, 0x37, 0x83, 0xe1, 0xef, 0xe7, 0xe5, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdc, 0xdd,
0xe5, 0xe7, 0xdf, 0xde, 0xde, 0xde, 0xea, 0xe1, 0xe1, 0xea, 0xdf, 0x98, 0x98, 0x98, 0x98, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0x68, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x2c, 0x2c,
0x27, 0x27, 0x31, 0x31, 0x4e, 0xd9, 0xb1, 0x9c, 0x65, 0x51, 0x3a, 0x48, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x42, 0x2b, 0x61, 0xc1, 0xbe, 0xc1, 0xed, 0x4d, 0x10, 0x10, 0x0e,
0x0e, 0x0a, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c,
0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e,
0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0xe9, 0xe5, 0x98,
0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe5, 0x82, 0x22, 0x46, 0x3b, 0x2e,
0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0x4e, 0x40, 0x6c, 0x9c, 0x9c, 0x6e, 0x61, 0x2b, 0x42, 0x07,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x1f, 0x51, 0x66, 0xc1, 0xc1, 0xb9,
0x88, 0x10, 0x0e, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x06, 0x0b, 0x55, 0x09, 0x09, 0x0d,
0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03,
0x03, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15, 0x15, 0x60, 0x17, 0x68, 0xdf,
0xe2, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xe7, 0xe9, 0x22, 0x22,
0x3b, 0x57, 0x2e, 0x5c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x72, 0xc2, 0x9c, 0x9c, 0x67,
0x51, 0x1f, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x48, 0x3a,
0x2b, 0x74, 0xc1, 0xc1, 0xdb, 0x8f, 0x0e, 0x0a, 0x0a, 0x30, 0x28, 0x06, 0x06, 0x0b, 0x0b, 0x09,
0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x05, 0x05, 0x05, 0x02, 0x02, 0x01,
0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x80, 0xea,
0xe5, 0xe4, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdd, 0xef, 0x87,
0x59, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x4e, 0xb9,
0x9c, 0x9c, 0x69, 0x2b, 0x3a, 0x48, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x32, 0x39, 0x63, 0x7f, 0xd4, 0xd4, 0xee, 0x0a, 0x30, 0x30, 0x28, 0x06, 0x06,
0x0b, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02,
0x02, 0x5e, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x11, 0x93, 0x68,
0xdf, 0xdc, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xe5, 0xde,
0x82, 0x23, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40,
0x40, 0x45, 0xf1, 0x9c, 0x9c, 0x6e, 0x61, 0x39, 0x32, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x1f, 0x2b, 0x69, 0xd4, 0xd4, 0xc7, 0xe8, 0x28,
0x06, 0x06, 0x06, 0x0b, 0x55, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x04, 0x1c, 0x37,
0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x58, 0x14, 0x93, 0x68,
0xeb, 0xdd, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe4, 0xdd, 0xef,
0xe9, 0x34, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x2c, 0x2c, 0x2c, 0x27, 0x31,
0x31, 0x4e, 0x40, 0x45, 0x45, 0x6c, 0x9c, 0x9c, 0x9c, 0x63, 0x2b, 0x1f, 0x36, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x48, 0x3a, 0x51, 0xc2,
0xc7, 0xc7, 0xc7, 0xed, 0x06, 0x0b, 0x0b, 0x09, 0x09, 0x09, 0x0d, 0x47, 0x0c, 0x0c, 0x04, 0x04,
0x1c, 0x37, 0x05, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x95, 0xe1,
0xdf, 0xdd, 0xe3, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xdc, 0xe7, 0xde,
0xe9, 0x34, 0x34, 0x24, 0x1d, 0x1d, 0x1d, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c,
0x27, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x45, 0x45, 0x6c, 0xb1, 0x9c, 0x9c, 0x67, 0x51, 0x3a, 0x48,
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x42, 0x3a, 0x51, 0xbc, 0xc7, 0xc7, 0xc1, 0xf2, 0x0b, 0x09, 0x09, 0x0d, 0x0d, 0x4b, 0x0c,
0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x71, 0xea,
0xe7, 0xdc, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xe3, 0xdc, 0xe5, 0xdf, 0xea, 0xe9,
0x8e, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x3b, 0x3b, 0x2e,
0x5c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x40, 0x45, 0x4a, 0x72, 0xb4, 0x9c, 0x9c, 0x65,
0x51, 0x3a, 0x42, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x32, 0x39, 0x2b, 0xd2, 0xc7, 0xc7, 0xbe, 0xf2, 0x09, 0x0d,
0x0d, 0x4b, 0x0c, 0x04, 0x04, 0x1c, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x01, 0x92, 0xe6, 0xef,
0xe5, 0xe4, 0x98, 0x98, 0x98, 0xe4, 0xdc, 0xdd, 0xe7, 0xdf, 0xde, 0xea, 0xe9, 0x80, 0x1a, 0x1a,
0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x22,
0x3b, 0x57, 0x2e, 0x2c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x45, 0x45, 0x4a, 0x72, 0xc0,
0x9c, 0x9c, 0x69, 0x2b, 0x39, 0x32, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x32, 0x2b, 0x3e, 0xd2, 0xc8,
0xc8, 0xd4, 0xed, 0x47, 0x0c, 0x0c, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02, 0x02, 0x02, 0x01,
0x01, 0x03, 0x02, 0x93, 0x92, 0x92, 0x01, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17,
0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23,
0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0x4e, 0x40, 0x40, 0x45, 0x45,
0x4a, 0x72, 0xc0, 0x9c, 0x9c, 0x69, 0x3e, 0x2b, 0x32, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36,
0x1f, 0x39, 0x62, 0xd2, 0xc8, 0xc8, 0xc7, 0xe8, 0x04, 0x04, 0x04, 0x1c, 0x37, 0x05, 0x05, 0x02,
0x02, 0x01, 0x01, 0x01, 0x03, 0x03, 0x1e, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x2a, 0x2a, 0x5d,
0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d,
0x1d, 0x23, 0x23, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x5c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40,
0x40, 0x45, 0x4a, 0x4a, 0x6c, 0xc5, 0x9c, 0x9c, 0x69, 0x62, 0x39, 0x1f, 0x36, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x36, 0x1f, 0x2b, 0x62, 0xbc, 0xc8, 0xbf, 0xbf, 0xee, 0x1c, 0x1c, 0x37,
0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x1e, 0x25, 0x14, 0x14, 0x11, 0x11,
0x2a, 0x49, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34,
0x24, 0x24, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x22, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31,
0x31, 0x4e, 0x40, 0x45, 0x45, 0x4a, 0x45, 0xf1, 0x9c, 0x9c, 0x9c, 0x69, 0x62, 0x2b, 0x1f, 0x36,
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x32, 0x2b, 0x51, 0xb8, 0xbf, 0xbf,
0xbf, 0xdb, 0x1e, 0x05, 0x02, 0x02, 0x02, 0x01, 0x01, 0x03, 0x03, 0x3f, 0x1e, 0x54, 0x25, 0x14,
0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x5f, 0x1b, 0x1b, 0x20, 0x19, 0x19,
0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c,
0x27, 0x27, 0x31, 0x4e, 0x40, 0x40, 0x45, 0x45, 0x4a, 0x4e, 0xd9, 0x9c, 0x9c, 0x9c, 0x69, 0x51,
0x2b, 0x32, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x36, 0x32,
0x39, 0x2b, 0xc2, 0xbf, 0xbf, 0xd2, 0x6d, 0xed, 0x02, 0x01, 0x01, 0x03, 0x03, 0x03, 0x1e, 0x1e,
0x25, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20,
0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x3b, 0x57, 0x2e,
0x2c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x40, 0x45, 0x4a, 0x4a, 0x72, 0xbf, 0x9c, 0x9c,
0x9c, 0x65, 0x2b, 0x39, 0x32, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x36, 0x32, 0x3a, 0x51, 0x69, 0xbc, 0xd2, 0xd2, 0xd2, 0xe0, 0x1e, 0x03, 0x03,
0x3f, 0x1e, 0x54, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x60, 0x17, 0x1a, 0x1a,
0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x5b, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x46,
0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x45, 0x45, 0x4a, 0x4e, 0xf1,
0x9c, 0x9c, 0x9c, 0x6e, 0x67, 0x51, 0x3a, 0x32, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x42, 0x3a, 0x51, 0x63, 0xb8, 0xd2, 0xd2,
0xbc, 0xbe, 0xe8, 0x3f, 0x1e, 0x25, 0x25, 0x14, 0x14, 0x11, 0x11, 0x2a, 0x49, 0x15, 0x15, 0x17,
0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23,
0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40, 0x40, 0x45, 0x4a,
0x4a, 0x6c, 0x7b, 0x9c, 0x9c, 0x9c, 0x69, 0x63, 0x51, 0x3a, 0x42, 0x07, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x48, 0x1f,
0x2b, 0x2b, 0x66, 0xbc, 0xbc, 0xbc, 0xbc, 0xcc, 0xed, 0x58, 0x14, 0x11, 0x11, 0x2a, 0x2a, 0x15,
0x15, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x24, 0x1d,
0x1d, 0x23, 0x59, 0x22, 0x22, 0x3b, 0x57, 0x2e, 0x2c, 0x2c, 0x2c, 0x27, 0x31, 0x31, 0x4e, 0x40,
0x45, 0x45, 0x4a, 0x72, 0xd0, 0x9c, 0x9c, 0x9c, 0x9c, 0x65, 0x2b, 0x2b, 0x1f, 0x48, 0x07, 0x07,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x36, 0x1f, 0x3a, 0x51, 0x67, 0x7e, 0xbc, 0xbc, 0xb8, 0xb8, 0xdb, 0xed, 0x11,
0x2a, 0x49, 0x15, 0x15, 0x17, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19, 0x34, 0x34,
0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x46, 0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31,
0x31, 0x4e, 0x40, 0x45, 0x45, 0x72, 0xd9, 0x9c, 0x9c, 0x9c, 0x9c, 0x69, 0x63, 0x51, 0x3a, 0x1f,
0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x42, 0x1f, 0x39, 0x2b, 0x69, 0xb7, 0xb8,
0xb8, 0xb8, 0xb8, 0xd0, 0xee, 0x2a, 0x60, 0x17, 0x1a, 0x1a, 0x1b, 0x1b, 0x20, 0x20, 0x19, 0x19,
0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x3b, 0x3b, 0x2e, 0x5c, 0x2c, 0x2c,
0x27, 0x31, 0x31, 0x4e, 0x40, 0x40, 0x4e, 0x6c, 0xb9, 0x9c, 0x9c, 0x9c, 0x9c, 0x6e, 0x67, 0x2b,
0x39, 0x1f, 0x42, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x36, 0x32,
0x3a, 0x2b, 0x41, 0x70, 0xb7, 0xb8, 0xb7, 0xb7, 0xb7, 0xbf, 0xdb, 0xed, 0x1a, 0x1b, 0x1b, 0x20,
0x20, 0x19, 0x19, 0x34, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x59, 0x22, 0x22, 0x3b, 0x57, 0x2e,
0x2c, 0x2c, 0x27, 0x27, 0x31, 0x31, 0x4e, 0x4e, 0x72, 0xf1, 0xcd, 0xb1, 0x9c, 0x9c, 0x9c, 0x6e,
0x65, 0x41, 0x2b, 0x3a, 0x32, 0x36, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0x07, 0x48, 0x1f, 0x3a, 0x51, 0x41, 0x6b, 0xc2, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7,
0xd2, 0xdb, 0xee, 0x77, 0x19, 0x53, 0x34, 0x24, 0x24, 0x1d, 0x1d, 0x23, 0x23, 0x22, 0x22, 0x46,
0x3b, 0x2e, 0x2e, 0x2c, 0x2c, 0x27, 0x27, 0x31, 0x72, 0x6c, 0x9a, 0xcd, 0xb1, 0xb1, 0x9c, 0x9c,
0x9c, 0x6e, 0x67, 0x51, 0x51, 0x3a, 0x1f, 0x48, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x48, 0x1f, 0x3a, 0x2b, 0x2b, 0x67,
0x66, 0xb7, 0xcd, 0xcd, 0xcd, 0xcd, 0xc2, 0xc2, 0xbc, 0xd8, 0xf1, 0xee, 0x6c, 0x72, 0x72, 0x1d,
0x22, 0x22, 0x3b, 0x57, 0x46, 0x72, 0x72, 0x6c, 0x6c, 0xf1, 0xcc, 0xb7, 0xc9, 0xc9, 0xb1, 0xb1,
0xb1, 0x9c, 0x9c, 0x69, 0x67, 0x2b, 0x51, 0x3a, 0x1f, 0x48, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07,
0x42, 0x1f, 0x3a, 0x39, 0x2b, 0x62, 0x69, 0xb4, 0xc2, 0xc2, 0xc2, 0xc2, 0xc2, 0xc2, 0xc0, 0xc0,
0xc0, 0xc0, 0xc0, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xc5, 0xc5, 0xc5, 0xc9, 0xc9, 0xc9,
0xc9, 0xb1, 0xb1, 0x9c, 0x69, 0x67, 0x62, 0x2b, 0x39, 0x3a, 0x1f, 0x42, 0x07, 0x07, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x48, 0x32, 0x1f, 0x3a, 0x2b, 0x2b, 0x2b, 0x67, 0x6b, 0xb4,
0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xc5, 0xc5, 0xc5,
0xc9, 0xc9, 0xc9, 0x6b, 0x6e, 0x65, 0x67, 0x2b, 0x35, 0x2b, 0x3a, 0x1f, 0x32, 0x48, 0x07, 0x07,
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x36, 0x48, 0x42, 0x3a,
0x3a, 0x39, 0x51, 0x2b, 0x2b, 0x61, 0x67, 0x69, 0x6b, 0x6b, 0xb1, 0x70, 0xc5, 0x70, 0xb1, 0x70,
0x6b, 0x9c, 0x6e, 0x69, 0x65, 0x67, 0x61, 0x2b, 0x35, 0x51, 0x39, 0x3a, 0x3a, 0x42, 0x48, 0x36,
0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


int16_t old_color, current_color,flag_colour;
int16_t old_pen,current_pen,flag_pen;
boolean show_flag = true;

void show_string(uint8_t *str,int16_t x,int16_t y,uint8_t csize,uint16_t fc, uint16_t bc,boolean mode)
{
    tft.Set_Text_Mode(mode);
    tft.Set_Text_Size(csize);
    tft.Set_Text_colour(fc);
    tft.Set_Text_Back_colour(bc);
    tft.Print_String(str,x,y);
}

//show color select menu
void show_color_select_menu(void)
{
   uint16_t i;
   for(i = 0;i<6;i++)
   {
       tft.Set_Draw_color(color_mask[i]);
       tft.Fill_Rectangle(i*COLORBOXSIZE, 0, (i+1)*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
   }  
   tft.Set_Draw_color(GREEN);
   tft.Fill_Round_Rectangle((tft.Get_Display_Width()-20)/3+10, COLORBOXSIZE/2+2, (tft.Get_Display_Width()-20)/3*2+10,COLORBOXSIZE/2+20, 5);
   show_string("OK",CENTER,COLORBOXSIZE/2+4,2,RED, BLACK,1);
}

//show pen size select menu
void show_pen_size_select_menu(void)
{
  uint16_t i;
  tft.Set_Text_Mode(1);
  tft.Set_Text_Size(2);
  tft.Set_Text_colour(GREEN);
  tft.Set_Text_Back_colour(BLACK);
  for(i = 0;i<4;i++)
  {
      tft.Print_Number_Int(i+1, 5+PENBOXSIZE*i, (COLORBOXSIZE/2-16)/2, 0, ' ',10);
      tft.Set_Draw_color(RED);
      tft.Fill_Rectangle(25+PENBOXSIZE*i, COLORBOXSIZE/2/2-i, PENBOXSIZE*(i+1)-10, COLORBOXSIZE/2/2+i);
  }
   tft.Set_Draw_color(GREEN);
   tft.Fill_Round_Rectangle((tft.Get_Display_Width()-20)/3+10, COLORBOXSIZE/2+2, (tft.Get_Display_Width()-20)/3*2+10,COLORBOXSIZE/2+20, 5);
   show_string("OK",CENTER,COLORBOXSIZE/2+4,2,RED, BLACK,1);
}

//show main menu
void show_main_menu(void)
{
   tft.Set_Draw_color(YELLOW);
   tft.Fill_Round_Rectangle(5, 0, (tft.Get_Display_Width()-20)/3+5,COLORBOXSIZE/2+20, 5);
   tft.Fill_Round_Rectangle((tft.Get_Display_Width()-20)/3*2+15, 0, (tft.Get_Display_Width()-20)/3*3+15,COLORBOXSIZE/2+20, 5);
   tft.Set_Draw_color(MAGENTA);
   tft.Fill_Round_Rectangle((tft.Get_Display_Width()-20)/3+10, 0, (tft.Get_Display_Width()-20)/3*2+10,COLORBOXSIZE/2+20, 5);
   show_string("COLOUR",5+((tft.Get_Display_Width()-20)/3-72)/2-1,((COLORBOXSIZE/2+20)-16)/2,2,BLUE, BLACK,1);
   show_string("CLEAR",(tft.Get_Display_Width()-20)/3+10+((tft.Get_Display_Width()-20)/3-60)/2-1,((COLORBOXSIZE/2+20)-16)/2,2,WHITE, BLACK,1);
   show_string("PENSIZE",(tft.Get_Display_Width()-20)/3*2+15+((tft.Get_Display_Width()-20)/3-84)/2-1,((COLORBOXSIZE/2+20)-16)/2,2,BLUE, BLACK,1);
 }

#define BTN_SIZE 100

class Button {
  public:
    Button();
    Button(int id, int16_t x, int16_t y, int16_t colour);
    Button(int16_t x, int16_t y, int16_t size, int16_t colour, int id);
    Button(int16_t x, int16_t y, int16_t size, int16_t colour, int id, String txt);
    int ID();
    void Draw(LCDWIKI_KBV screen);
    bool Clicked(int16_t x, int16_t y);
    void Action();
  private:
    int16_t _x, _y, _size, _colour;
    int _id;
    String _txt;
};

Button::Button(){
  _x = 0;
  _y = 0;
  _size = 100;
  _colour = BLUE;
  _txt = "Tiago";
}

Button::Button(int16_t x, int16_t y, int16_t size, int16_t colour, int id){
  _x = x;
  _y = y;
  _size = size;
  _colour = colour;
  _id = id;
  _txt = "Btn" + String(id);
}

Button::Button(int16_t x, int16_t y, int16_t size, int16_t colour, int id, String txt){
  _x = x;
  _y = y;
  _size = size;
  _colour = colour;
  _id = id;
  _txt = txt;
}

int Button::ID(){
  return _id;
}


Button::Button(int id, int16_t x, int16_t y, int16_t colour){
  _x = x;
  _y = y;
  _size = 95;
  _colour = colour;
  _id = 13+id;
  Serial.print("btns[");
  Serial.print(id);
  Serial.print("] = Button(");
  Serial.print(_x);
  Serial.print(",");
  Serial.print(_y);
  Serial.print(",");
  Serial.print(_size);
  Serial.print(",");
  Serial.print("BLUE");
  Serial.print(",");
  Serial.print(_id);
  Serial.println(");");
}

void Button::Action(){
  
}

#define BTN_TXT_CLEARANCE 5
#define TXT_LINE_CLEARANCE 20
#define FONT_HIGHT 14
#define FONT_WIDTH 11

void Button::Draw(LCDWIKI_KBV screen){
  tft.Set_Draw_color(_colour);
  tft.Draw_Round_Rectangle(_x, _y, _x+_size, _y+_size, 5);
  int16_t xPos = _x+((_size)/2)+FONT_HIGHT;

  write_string(_txt.c_str(), xPos, _y+5, 2, RED, RED, 1);
}

bool Button::Clicked(int16_t px, int16_t py){
  if (((px >= _x) && (px <= (_x+_size))) && ((py >= _y) && (py <= (_y+_size)))){
    return true;
  }

  return false;
}


#define BTNS_SIZE 12
Button btns[BTNS_SIZE];

void write_string(uint8_t *str,int16_t x,int16_t y,uint8_t size,uint16_t fgcolour, uint16_t bgcolour, boolean mode){
    tft.Set_Rotation(45);
    int16_t ax,ay;
    ax = y;
    ay= map(x, 0, 320, 320, 0);
    Serial.print("(");
    Serial.print(x);
    Serial.print(",");
    Serial.print(y);
    Serial.print(") -> (");
    Serial.print(ax);
    Serial.print(",");
    Serial.print(ay);
    Serial.println(")");
    show_string(str, ax, ay,size, fgcolour, bgcolour, mode);
    tft.Set_Rotation(0);
}

void setup(void) 
{
  Serial.begin(115200);

  btns[0] = Button(0,0,95,31,13);
  btns[1] = Button(0,110,95,31,14);
  btns[2] = Button(0,220,95,31,15);
  btns[3] = Button(0,330,95,31,16);
  btns[4] = Button(110,0,95,31,17);
  btns[5] = Button(110,110,95,31,18);
  btns[6] = Button(110,220,95,31,19);
  btns[7] = Button(110,330,95,31,20);
  btns[8] = Button(220,0,95,31,21, "EMACS");
  btns[9] = Button(220,110,95,31,22);
  btns[10] = Button(220,220,95,31,23);
  btns[11] = Button(220,330,95,31,24);

  tft.Init_LCD();
  Serial.print("LCD ID:");
  Serial.println(tft.Read_ID(), HEX);

  tft.Fill_Screen(BLACK);

  Serial.print("Screen size: (");
  Serial.print(tft.Get_Display_Width());
  Serial.print(",");
  Serial.print(tft.Get_Display_Height());
  Serial.println(")");

  for (int i = 0; i < BTNS_SIZE; i++){
    btns[i].Draw(tft);
  }

  //tft.Set_Addr_Window(100, 100, 200, 200); 
  tft.Draw_Bit_Map(100,100,200,200,emacs, 1);

  current_pen = 0;
  pinMode(13, OUTPUT);
}

#define MINPRESSURE 10
#define MAXPRESSURE 1000



void loop(){
  digitalWrite(13, HIGH);
  TSPoint p = ts.getPoint();
  digitalWrite(13, LOW);
  pinMode(XM, OUTPUT);
  pinMode(YP, OUTPUT);
  
  if (p.z > MINPRESSURE && p.z < MAXPRESSURE) {
    int16_t x = map(p.x, TS_MINX, TS_MAXX, tft.Get_Display_Width(), 0);
    int16_t y = map(p.y, TS_MINY, TS_MAXY, tft.Get_Display_Height(),0);
  /*  
    while (true){
      TSPoint dp = ts.getPoint();
      if (!(dp.z > MINPRESSURE && dp.z < MAXPRESSURE)) {
        break;
      }
      delay(10);
    }
*/
/*    Serial.print("Pressed:(");
    Serial.print(x);
    Serial.print(",");
    Serial.print(y);
    Serial.println(")");
    */

    Button action;

    for (int idx = 0; idx < BTNS_SIZE; idx ++){
      if (btns[idx].Clicked(x,y)){
        Serial.print("clicked btn: ");
        Serial.println(btns[idx].ID());
      }
    }

    delay(100);
  }

}

  /*

  int16_t yclearance = 0;
  int16_t xclearance = 0;
  int16_t idx = 0;
  Serial.println("init code");
  for (int16_t row = 0; row < 3; row++){
    yclearance = 0;
    for (int16_t col = 0; col < 4; col ++)
    {
      btns[idx++] = Button((int)idx, row * 100+xclearance, col * 100+yclearance, BLUE);
      yclearance += 10;
    }
    xclearance += 10;
  }
  Serial.println("done");
*/
/*
void loopOld()
{
comme:
  digitalWrite(13, HIGH);
  TSPoint p = ts.getPoint();
  digitalWrite(13, LOW);
  pinMode(XM, OUTPUT);
  pinMode(YP, OUTPUT);
  if (p.z > MINPRESSURE && p.z < MAXPRESSURE) 
  {
      if (p.y < (TS_MINY-5)) 
      {
          tft.Set_Draw_color(BLACK);
          tft.Fill_Rectangle(0, COLORBOXSIZE, tft.Get_Display_Width()-1, tft.Get_Display_Height()-1);
      }
      //p.x = tft.Get_Display_Width()-map(p.x, TS_MINX, TS_MAXX, tft.Get_Display_Width(), 0);
      //p.y = tft.Get_Display_Height()-map(p.y, TS_MINY, TS_MAXY, tft.Get_Display_Height(), 0);
      p.x = map(p.x, TS_MINX, TS_MAXX, tft.Get_Display_Width(), 0);
      p.y = map(p.y, TS_MINY, TS_MAXY, tft.Get_Display_Height(),0);
         if(p.y < COLORBOXSIZE/2+20) 
         {
              if(((p.x>5)&&(p.x < ((tft.Get_Display_Width()-20)/3+5)))&&!flag_pen) //select color
              {
                flag_colour = 1;
                if(show_flag)
                {
                    tft.Set_Draw_color(BLACK);
                    tft.Fill_Rectangle(0,0,tft.Get_Display_Width()-1,COLORBOXSIZE/2+20);
                    show_color_select_menu();
                }
                show_flag = false;
                switch(current_color)
                {
                  case RED:
                  {
                    tft.Set_Draw_color(WHITE);
                    tft.Draw_Rectangle(0, 0, COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    break;  
                  }
                  case YELLOW:
                  {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(COLORBOXSIZE, 0, 2*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                       break; 
                  }
                  case GREEN:
                  {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(2*COLORBOXSIZE, 0, 3*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                       break; 
                   }
                  case CYAN:
                  {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(3*COLORBOXSIZE, 0, 4*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;                 
                  }
                  case BLUE:
                  {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(4*COLORBOXSIZE, 0, 5*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;   
                  }
                  case MAGENTA:  
                  {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(5*COLORBOXSIZE, 0, 6*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;   
                  }
                  default:
                      break;
                }
             }
             if(flag_colour)
             {
                 if(p.y < COLORBOXSIZE/2)
                 {
                    old_color = current_color;
                    if (p.x < COLORBOXSIZE) 
                    { 
                        current_color = RED; 
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(0, 0, COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    } 
                    else if (p.x < COLORBOXSIZE*2) 
                    {
                        current_color = YELLOW;
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(COLORBOXSIZE, 0, 2*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    } 
                    else if (p.x < COLORBOXSIZE*3) 
                    {
                        current_color = GREEN;
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(2*COLORBOXSIZE, 0, 3*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    } 
                    else if (p.x < COLORBOXSIZE*4) 
                    {
                        current_color = CYAN;
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(3*COLORBOXSIZE, 0, 4*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    } 
                    else if (p.x < COLORBOXSIZE*5) 
                    {
                        current_color = BLUE;
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(4*COLORBOXSIZE, 0, 5*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    } 
                    else if (p.x < COLORBOXSIZE*6) 
                    {
                        current_color = MAGENTA;
                        tft.Set_Draw_color(WHITE);
                        tft.Draw_Rectangle(5*COLORBOXSIZE, 0, 6*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                    }
                    if(old_color != current_color)
                    {
                        switch(old_color)
                        {
                            case RED:
                            {
                              tft.Set_Draw_color(RED);
                              tft.Draw_Rectangle(0, 0, COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                              break;  
                            }
                            case YELLOW:
                            {
                                 tft.Set_Draw_color(YELLOW);
                                 tft.Draw_Rectangle(COLORBOXSIZE, 0, 2*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                                 break; 
                            }
                            case GREEN:
                            {
                                 tft.Set_Draw_color(GREEN);
                                 tft.Draw_Rectangle(2*COLORBOXSIZE, 0, 3*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                                 break; 
                             }
                            case CYAN:
                            {
                                 tft.Set_Draw_color(CYAN);
                                 tft.Draw_Rectangle(3*COLORBOXSIZE, 0, 4*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                                 break;                 
                            }
                            case BLUE:
                            {
                                 tft.Set_Draw_color(BLUE);
                                 tft.Draw_Rectangle(4*COLORBOXSIZE, 0, 5*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                                 break;   
                            }
                            case MAGENTA:  
                            {
                                 tft.Set_Draw_color(MAGENTA);
                                 tft.Draw_Rectangle(5*COLORBOXSIZE, 0, 6*COLORBOXSIZE-1, COLORBOXSIZE/2-1);
                                 break;   
                            }
                            default:
                                break;                        
                        }
                    }
                }
                else if(p.y < COLORBOXSIZE/2+20)
                {
                     if((p.x>(tft.Get_Display_Width()-20)/3+10)&&(p.x<(tft.Get_Display_Width()-20)/3*2+10))
                     {
                         tft.Set_Draw_color(BLACK);
                         tft.Fill_Rectangle(0,0,tft.Get_Display_Width()-1,COLORBOXSIZE/2+20);
                         show_main_menu();
                         flag_colour = 0;
                         show_flag = true;
                         goto comme;
                     }
                }
            }
            if(((p.x>((tft.Get_Display_Width()-20)/3*2+15))&&(p.x < (((tft.Get_Display_Width()-20)/3*3+15))))&&!flag_colour) //select pen size
            {
                flag_pen = 1;
                if(show_flag)
                {
                    tft.Set_Draw_color(BLACK);
                    tft.Fill_Rectangle(0,0,tft.Get_Display_Width()-1,COLORBOXSIZE/2+20);
                    show_pen_size_select_menu();
                }
                show_flag = false;
                switch(current_pen)
                {
                   case 0:
                   {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(0, 0, PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;
                   }
                   case 1:
                   {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(PENBOXSIZE, 0, 2*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       break; 
                   }
                   case 2:
                   {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(2*PENBOXSIZE, 0, 3*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;   
                   }
                   case 3:  
                   {
                       tft.Set_Draw_color(WHITE);
                       tft.Draw_Rectangle(3*PENBOXSIZE, 0, 4*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       break;                
                   }
                   default:
                       break;
                  }              
              }
              if(flag_pen)
              {
                   if(p.y < COLORBOXSIZE/2)
                   {
                      old_pen = current_pen;
                      if(p.x < PENBOXSIZE)
                      {
                          current_pen = 0;
                          tft.Set_Draw_color(WHITE);
                          tft.Draw_Rectangle(0, 0, PENBOXSIZE-1, COLORBOXSIZE/2-1);
                      }
                      else if(p.x < 2*PENBOXSIZE)
                      {
                          current_pen = 1;
                          tft.Set_Draw_color(WHITE);
                          tft.Draw_Rectangle(PENBOXSIZE, 0, 2*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       }
                       else if(p.x < 3*PENBOXSIZE) 
                       {
                           current_pen = 2;
                           tft.Set_Draw_color(WHITE);
                           tft.Draw_Rectangle(2*PENBOXSIZE, 0, 3*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                       }
                       else if(p.x < 4*PENBOXSIZE)
                       {
                           current_pen = 3;
                           tft.Set_Draw_color(WHITE);
                           tft.Draw_Rectangle(3*PENBOXSIZE, 0, 4*PENBOXSIZE-1, COLORBOXSIZE/2-1);               
                       }
                       if(old_pen != current_pen)
                       {
                           switch(old_pen)
                           {
                                 case 0:
                                 {
                                     tft.Set_Draw_color(BLACK);
                                     tft.Draw_Rectangle(0, 0, PENBOXSIZE-1, COLORBOXSIZE/2-1);
                                     break;
                                 }
                                 case 1:
                                 {
                                     tft.Set_Draw_color(BLACK);
                                     tft.Draw_Rectangle(PENBOXSIZE, 0, 2*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                                     break; 
                                 }
                                 case 2:
                                 {
                                     tft.Set_Draw_color(BLACK);
                                     tft.Draw_Rectangle(2*PENBOXSIZE, 0, 3*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                                     break;   
                                 }
                                 case 3:  
                                 {
                                     tft.Set_Draw_color(BLACK);
                                     tft.Draw_Rectangle(3*PENBOXSIZE, 0, 4*PENBOXSIZE-1, COLORBOXSIZE/2-1);
                                     break;                
                                 }
                                 default:
                                     break;           
                           }      
                       }
                   }
                   else if(p.y < COLORBOXSIZE/2+20)
                   {
                       if((p.x>(tft.Get_Display_Width()-20)/3+10)&&(p.x<(tft.Get_Display_Width()-20)/3*2+10))
                       {
                          tft.Set_Draw_color(BLACK);
                          tft.Fill_Rectangle(0,0,tft.Get_Display_Width()-1,COLORBOXSIZE/2+20);
                          show_main_menu();
                          flag_pen = 0;
                          show_flag = true;
                          goto comme;
                       }  
                   }
              }
              if(((p.x>((tft.Get_Display_Width()-20)/3+10))&&(p.x < ((tft.Get_Display_Width()-20)/3*2+10)))&&!flag_colour&&!flag_pen)
              {
                  tft.Set_Draw_color(BLACK);  
                  tft.Fill_Rectangle(0,COLORBOXSIZE,tft.Get_Display_Width()-1,tft.Get_Display_Height()-1);
              }
         }
      if (((p.y-current_pen) > COLORBOXSIZE/2+20) && ((p.y+current_pen) < tft.Get_Display_Height()))  //drawing
      {
        tft.Set_Draw_color(current_color);
       // if(1 == current_pen)
     //   {
      //      tft.Draw_Pixel(p.x,  p.y);
     //   }
     //   else 
     //   {
          tft.Fill_Circle(p.x,  p.y,current_pen);
      //  }
    }
  }
}
*/